plugins {
    id 'fabric-loom' version '1.5.+'
    id 'java-gradle-plugin'
    id 'maven-publish'
}

ext.Versions = new Properties();
Versions.load(file("version-files/mcversion-1.20.2.properties").newReader())

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = "crowdin-translate"
version = "${project.version}+${Versions['minecraft_version']}"

loom {
    mixin.defaultRefmapName = "crowdin-translate-refmap.json"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// These are, actually, not even used in this project.
// They are only included to make loom happy.
// Use old versions intentionally to make this work with a broad range of MCs.
dependencies {
    minecraft "com.mojang:minecraft:${Versions['minecraft_version']}"
    mappings "net.fabricmc:yarn:${Versions['yarn_mappings']}:v2"
    modImplementation "net.fabricmc:fabric-loader:${Versions['loader_version']}"
    modRuntimeOnly fabricApi.module("fabric-resource-loader-v0", "${Versions['fabric_version']}")
}


// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
java {
    withSourcesJar()
}

jar {
    from "LICENSE"
    manifest {
        attributes(
            'Main-Class': 'de.guntram.mcmod.crowdintranslate.CrowdinTranslate'
        )
    }
}

gradlePlugin {
    plugins {
        gradleplugin {
            id = 'de.guntram.mcmod.crowdin-translate'
            implementationClass = 'de.guntram.mcmod.crowdintranslate.GradlePlugin.CrowdinTranslatePlugin'
        }
    }
}

group = "de.guntram.mcmod"
publishing {
    publications {
        mavenJava(MavenPublication) {
            //groupId = 'de.guntram.mcmod'
            from components.java
        }
    }
    repositories {
        maven {
            url = "${projectDir}/../../.m2-repo"
        }
    }
}

//group = "de.guntram.mcmod"
//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            from components.java
//        }
//    }
//    repositories {
//        maven {
//            url = "file://tmp/mymavenrepo"
//        }
//    }
//}
//
//task mypublish(dependsOn: publish, type: Exec) {
//    commandLine "rsync", "-av", "/tmp/mymavenrepo/", "maven@minecraft.guntram.de:/var/www/html/maven/"
//}
